function lexicaldata(dir)
    (data, errs) = datatuples(dir)
    filter(data) do tpl
        tpl.pos != "crossreference" &&
        tpl.pos != "participle"
    end
end

function lexicaldata()
    lexicaldata(pwd())
end
function datatuples()
    datatuples(pwd())
end

function datatuples(dir)
    summarydirs(dir) |> readdata
end

function summarydirs()
    summarydirs(pwd())
end

"""Find file names in local file system for all files with ChatGPT summaries of Lewis-Short articles.
$(SIGNATURES)
"""
function summarydirs(repo)
    summariesdir = joinpath(repo, "summaries")
    tranchenames = filter(readdir(summariesdir)) do dir
        startswith(dir, "tranche")
    end
    map(name -> joinpath(summariesdir, name), tranchenames)
end

function tabulae(;divider = "|")
    tabulae(pwd(); divider = divider)
end

function tabulae(repo::AbstractString; divider = "|")
    data = lexicaldata(repo)
    datasetbase = joinpath(repo, "tabulae-datasets", "lewis-short")

    # Nouns:
    nounlist = nouns(data)


    nounscommon = cextable(nounlist, "latcommon")
    nouns23 = cextable(nounlist, "lat23")
    nouns24 = cextable(nounlist, "lat24")
    nouns25 = cextable(nounlist, "lat25")
    
    
    commonfile = joinpath(datasetbase, "common", "stems-tables", "nouns", "nouns.cex")
    open(commonfile,"w") do io
        write(io, nounscommon)
    end
    lat23file = joinpath(datasetbase, "lat23", "stems-tables", "nouns", "nouns.cex")
    open(lat23file,"w") do io
        write(io, nouns23)
    end
    lat24file = joinpath(datasetbase, "lat24", "stems-tables", "nouns", "nouns.cex")
    open(lat24file,"w") do io
        write(io, nouns24)
    end
    lat25file = joinpath(datasetbase, "lat25", "stems-tables", "nouns", "nouns.cex")
    open(lat25file,"w") do io
        write(io, nouns25)
    end


    # Uninflected: prepositions


end


"""True if a string from Lewis-Short can be used in the "latcommon" dataset.
$(SIGNATURES)
"""
function iscommon(s)
    latindataset(s) == "latcommon"
end

"""Find dataset for the orthography of a given string in Lewis-Short.
If a word belongs to lat25, then we can generate lat24 for it by changing j -> i,
and lat23 by changing j -> i, and v -> u.
If a word belongs to lat24, then we can generate lat 23 by changing v -> u.
$(SIGNATURES)
"""
function latindataset(s::AbstractString)
    if occursin("j", s) 
        "lat25"
    elseif occursin("v", s) 
        "lat24"
    else
        "latcommon"
    end
end


"""Convert a string in Latin 25 orthography to Latin 24.
$(SIGNATURES)
"""
function lat24(s)
    replace(s, "j" => "i")
end


"""Convert a string in Latin 25 or Latin 24 orthography to Latin 23.
$(SIGNATURES)
"""
function lat23(s)
    replace(lat24(s), "v" => "u")    
end

"""Normalize a string generated by Suares.
$(SIGNATURES)
"""
function suareznorm(s)
    nohyphens = replace(s, "-" => "")
    Unicode.normalize(nohyphens; stripmark = true) |> strip
end